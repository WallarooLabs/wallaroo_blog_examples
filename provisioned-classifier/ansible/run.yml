- hosts: all
  gather_facts: no
  remote_user: ubuntu

  tasks:
  - name: clean slate
    shell: |
      ps -ef | grep -v grep | grep -w {{ item }} | awk '{print $2}' | xargs kill -9
    with_items:
      - machida
      - data_receiver
      - metrics_reporter
      - send.py
    become: true

  - name: clear resilience
    shell: rm -rf /tmp/clas*
    become: true

- hosts: metrics_host
  gather_facts: no
  serial: 1
  remote_user: ubuntu

  tasks:
  - name: Launch listener
    shell: |
      nohup data_receiver --framed --listen $METRICS_HOST:9999 > results.log 2>&1 &
    environment:
      METRICS_HOST: "{{ metrics_host_ip }}"

  - name: Wait for listener
    wait_for:
      host: "{{ metrics_host_ip }}"
      port: 9999
      timeout: 10

  - name: Launch metrics UI
    shell: |
      /usr/bin/metrics_ui/AppRun start
    become: true

  - name: Wait for metrics UI
    wait_for:
      host: "{{ metrics_host_ip }}"
      port: 4000
      timeout: 10

- hosts: initializer
  gather_facts: no
  serial: 1
  remote_user: ubuntu

  tasks:
  - name: Launch Initializer
    shell: |
      rm -rf log && mkdir -p log
      export PYTHONPATH=$PYTHONPATH:./classifier
      machida --application-module classifier \
          --in $INITIALIZER:8888 \
          --out $METRICS_HOST:9999 \
          --metrics $METRICS_HOST:5001 \
          --control $INITIALIZER:12500 \
          --data $INITIALIZER:12600 \
          --external $INITIALIZER:5050 \
          --worker-count $N_WORKERS \
          --cluster-initializer \
          --ponynoblock --ponynopin --ponythreads=1 > log/machida0.log 2>&1 &
    environment:
      INITIALIZER: "{{ initializer_ip }}"
      METRICS_HOST: "{{ metrics_host_ip }}"
      N_WORKERS: "{{ n_workers }}"
      W: "{{ workers_per_machine }}"
    args:
      chdir: "{{ app_dir }}"

  - name: Wait for initializer to start listening
    wait_for:
      host: "{{ initializer_ip }}"
      port: 12500
      timeout: 10

  - name: Launch extra workers on initializer node
    shell: |
      export PYTHONPATH=$PYTHONPATH:./classifier
      for N in $(seq 1 $((W - 1))); do
      WORKERNAME=$(echo "$THIS_HOST-$N" | sha256sum | awk '{print substr($1,1,10)}')
      machida --application-module classifier \
          --in $THIS_HOST:$((8888+N)) \
          --out $METRICS_HOST:9999 \
          --metrics $METRICS_HOST:5001 \
          --my-control $THIS_HOST:$((12500+N)) \
          --my-data $THIS_HOST:$((12600+N)) \
          --control $INITIALIZER:12500 \
          --name $WORKERNAME \
          --ponynoblock --ponynopin --ponythreads=1 \
        > log/machida-$WORKERNAME.log 2>&1 &
        done
    environment:
      INITIALIZER: "{{ initializer_ip }}"
      METRICS_HOST: "{{ metrics_host_ip }}"
      THIS_HOST: "{{ hostvars[inventory_hostname].private_ip }}"
      W: "{{ workers_per_machine }}"
    args:
      chdir: "{{ app_dir }}"

- hosts: workers
  gather_facts: no
  remote_user: ubuntu

  tasks:
  - name: Launch workers
    shell: |
      rm -rf log && mkdir -p log
      export PYTHONPATH=$PYTHONPATH:./classifier
      for N in $(seq 0 $((W-1))); do
      WORKERNAME=$(echo "$THIS_HOST-$N" | sha256sum | awk '{print substr($1,1,10)}')
      nohup machida --application-module classifier \
          --in "$THIS_HOST":$((8888+N)) \
          --out "$METRICS_HOST":9999 \
          --metrics "$METRICS_HOST":5001 \
          --control "$INITIALIZER":12500 \
          --my-control "$THIS_HOST":$((12500+N)) \
          --my-data "$THIS_HOST":$((12600+N)) \
          --name "$WORKERNAME" \
          --ponynoblock --ponynopin --ponythreads=1 \
        > log/machida-$WORKERNAME.log 2>&1 &
        sleep 0.3
        done
    environment:
      INITIALIZER: "{{ initializer_ip }}"
      METRICS_HOST: "{{ metrics_host_ip }}"
      THIS_HOST: "{{ hostvars[inventory_hostname].private_ip }}"
      W: "{{ workers_per_machine }}"
    args:
      chdir: "{{ app_dir }}"

- hosts: initializer
  gather_facts: no
  serial: 1
  remote_user: ubuntu

  tasks:
  - name: Wait for source
    wait_for:
      host: "{{ initializer_ip }}"
      port: 8888
      timeout: 10

- hosts: metrics_host
  gather_facts: no
  serial: 1
  remote_user: ubuntu

  tasks:
  - name: Start sending stream of data
    shell: |
      nohup ./bin/send.py "$INITIALIZER":8888 --lines {{ input_lines }} &
    environment:
      INITIALIZER: "{{ initializer_ip }}"
    args:
      chdir: "{{ app_dir }}"
